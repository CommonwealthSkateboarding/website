# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Main Site
GET     /                           controllers.Application.index(page: Long ?=0)
GET     /blog                       controllers.Application.blog(page: Long ?=0)
GET     /news/:id                   controllers.Application.showNews(id: Long)
GET     /shop                       controllers.Application.shop()
GET     /camp                       controllers.Application.camp()
GET     /camp/:id                   controllers.Application.campDetail(id: Long)
GET     /events                     controllers.Application.events()
GET     /events/:id                 controllers.Application.eventDetail(id: Long)
GET     /about                      controllers.Application.about()
GET     /contact                    controllers.Application.contact()
POST    /camp/:id/register          controllers.Application.registerForCampWithStripe(id: Long)
POST    /event/:id/register         controllers.Application.registerForEventWithStripe(id: Long)
GET     /registration               controllers.Application.registrationPage()

# Session
GET     /login                      controllers.Application.login()
GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /authenticate/:provider/denied     controllers.Application.oAuthDenied(provider: String)

# Admin
GET     /admin                  controllers.Admin.dashboard()

GET     /admin/news             controllers.Admin.newsIndex(page: Long ?=0)
GET     /admin/news/new         controllers.Admin.addNewsPage()
POST    /admin/news/new         controllers.Admin.addNewsItem()
GET     /admin/news/:page       controllers.Admin.newsIndex(page: Long)
GET     /admin/news/:id/edit    controllers.Admin.editNewsPage(id: Long)
POST    /admin/news/:id/edit    controllers.Admin.updateNewsItem(id: Long)

GET     /admin/members                          controllers.Admin.memberIndex(page: Long ?=0)
GET     /admin/members/unlimitedPassHolders     controllers.Admin.unlimitedPassHoldersPage()
GET     /admin/members/negativeBalance          controllers.Admin.negativeBalancePage()
GET     /admin/members/:id/view                 controllers.Admin.viewMemberPage(id: Long)
GET     /admin/members/:id/visit/session        controllers.Admin.sessionVisit(id: Long, immediate: Boolean ?= false)
GET     /admin/members/:id/visit/allday         controllers.Admin.allDayVisit(id: Long, immediate: Boolean ?= false)
GET     /admin/members/:id/visit/:pId           controllers.Admin.memberPassVisit(id: Long, pId: Long)
GET     /admin/members/visit/:id/undo           controllers.Admin.undoVisit(id: Long)
GET     /admin/members/visit/:id/extend         controllers.Admin.extendSessionVisit(id: Long)
GET     /admin/members/:id/addSessionPass/:passes   controllers.Admin.addSessionPass(id: Long, passes: Integer)
GET     /admin/members/:id/subtractSessionPass  controllers.Admin.subtractSessionPass(id: Long)
GET     /admin/members/:id/addAllDayPass        controllers.Admin.addAllDayPass(id: Long)
GET     /admin/members/:id/subtractAllDayPass   controllers.Admin.subtractAllDayPass(id: Long)
POST    /admin/members/:id/unlimitedPass/new    controllers.Admin.addUnlimitedPass(id: Long)
POST    /admin/members/unlimitedPass/:id/edit   controllers.Admin.editUnlimitedPass(id: Long)
GET     /admin/members/unlimitedPass/:id/remove controllers.Admin.removeUnlimitedPass(id: Long)
GET     /admin/members/:id/edit                 controllers.Admin.editMemberPage(id: Long)
POST    /admin/members/:id/edit                 controllers.Admin.updateMembership(id: Long)
GET     /admin/members/new                      controllers.Admin.addMemberPage(name ?= null)
POST    /admin/members/find                     controllers.Admin.findMember()
POST    /admin/members/new                      controllers.Admin.addMember()
GET     /admin/members/:page                    controllers.Admin.memberIndex(page: Long)
POST    /admin/members/:id/addCredit            controllers.Admin.addCredit(id: Long)
POST    /admin/members/:id/subtractCredit       controllers.Admin.subtractCredit(id: Long)

GET     /admin/log                              controllers.Admin.logIndex(page: Long ?=0)

GET     /admin/users                            controllers.Admin.userIndex()
GET     /admin/users/setUserRole                controllers.Admin.setUserRole(userId: Long, roleId: Long, state:Boolean)

GET     /admin/camps                            controllers.Admin.campIndex()
GET     /admin/camps/new                        controllers.Admin.addCampPage()
GET     /admin/camps/:id                        controllers.Admin.viewCampPage(id: Long)
GET     /admin/camps/:id/edit                   controllers.Admin.editCampPage(id: Long)
POST    /admin/camps/new                        controllers.Admin.addCamp()
POST    /admin/camps/:id/edit                   controllers.Admin.updateCamp(id: Long)
GET     /admin/camps/:id/register               controllers.Admin.campRegistrationPage(id: Long)
POST    /admin/camps/:id/register               controllers.Admin.addCampRegistration(id: Long)
GET     /admin/camps/registration/:id/edit      controllers.Admin.editCampRegistrationPage(id: Long)
POST    /admin/camps/registration/:id/edit      controllers.Admin.editCampRegistration(id: Long)

GET     /admin/events                           controllers.Admin.eventIndex()
GET     /admin/events/new                       controllers.Admin.addEventPage()
POST    /admin/events/new                       controllers.Admin.addEvent()
GET     /admin/events/:id                       controllers.Admin.viewEventPage(id: Long)
GET     /admin/events/:id/edit                  controllers.Admin.editEventPage(id: Long)
POST    /admin/events/:id/edit                  controllers.Admin.editEvent(id: Long)
GET     /admin/events/:id/archive               controllers.Admin.archiveEvent(id: Long)
GET     /admin/events/:id/register              controllers.Admin.eventRegistrationPage(id: Long)
POST    /admin/events/:id/register              controllers.Admin.addEventRegistration(id: Long)
GET     /admin/events/registration/:id/edit     controllers.Admin.editEventRegistrationPage(id: Long)
POST    /admin/events/registration/:id/edit     controllers.Admin.editEventRegistration(id: Long)

POST    /square/incoming                        controllers.Square.receiveWebhook()

GET     /admin/issues                           controllers.Admin.issueIndex()
GET     /admin/issues/new                       controllers.Admin.addIssuePage()
POST    /admin/issues/new                       controllers.Admin.addIssue()
GET     /admin/issues/:id/resolve               controllers.Admin.resolveIssue(id: Long)
GET     /admin/issues/:id/take                  controllers.Admin.takeIssue(id: Long)

GET     /admin/unheardSale                      controllers.Admin.unheardSaleIndex()
POST    /admin/unheardSale/new                  controllers.Admin.addUnheardSale()
GET     /admin/unheardSale/:id/delete           controllers.Admin.deleteUnheardSale(id: Long)
GET     /admin/unheardSale/:id/invoice          controllers.Admin.invoiceUnheardSale(id: Long)

GET     /admin/autocomplete/member/:search      controllers.Autocomplete.searchMembersByName(search)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
